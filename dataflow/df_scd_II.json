{
	"name": "df_scd_II",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_EmployeeDetails",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "tbl_emp",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "tbl_emp",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "tbl_emp",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "csvHash"
				},
				{
					"name": "tableHash"
				},
				{
					"name": "exists1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "exists2"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empId as integer,",
				"          empName as string,",
				"          gender as string,",
				"          country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          surrKey as integer,",
				"          empId as integer,",
				"          empName as string,",
				"          gender as string,",
				"          country as string,",
				"          isActive as integer,",
				"          startDate as date,",
				"          endDate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source1 derive(hashMap = md5(empId,empName,country)) ~> csvHash",
				"source2 derive(hashMapp = md5(empId,empName,country)) ~> tableHash",
				"csvHash, tableHash exists(hashMap == hashMapp,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 derive(isActive = 1,",
				"          startDate = toDate(currentUTC()),",
				"          endDate = 'Null') ~> derivedColumn1",
				"tableHash, derivedColumn1 exists(source2@empId == source1@empId,",
				"     negate:false,",
				"     broadcast: 'auto')~> exists2",
				"exists2 derive(endDate = currentDate(),",
				"          isActive = 0) ~> derivedColumn2",
				"derivedColumn2 alterRow(updateIf(true())) ~> alterRow1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          surrKey as integer,",
				"          empId as integer,",
				"          empName as string,",
				"          gender as string,",
				"          country as string,",
				"          isActive as integer,",
				"          startDate as date,",
				"          endDate as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          empId,",
				"          empName,",
				"          gender,",
				"          country,",
				"          isActive,",
				"          startDate,",
				"          endDate",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          surrKey as integer,",
				"          empId as integer,",
				"          empName as string,",
				"          gender as string,",
				"          country as string,",
				"          isActive as integer,",
				"          startDate as date,",
				"          endDate as date",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['surrKey'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          surrKey,",
				"          empId,",
				"          empName,",
				"          gender,",
				"          country,",
				"          isActive,",
				"          startDate,",
				"          endDate",
				"     )) ~> sink2"
			]
		}
	}
}